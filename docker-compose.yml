version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/backend_class
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_FLYWAY_ENABLED=true
      - SPRING_FLYWAY_BASELINE_ON_MIGRATE=true
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    networks:
      - backend_class-network

  db:
    image: postgres:14
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=backend_class
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_INITDB_ARGS=--encoding=UTF8
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_class-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d backend_class"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - backend_class-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  backend_class-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data: 